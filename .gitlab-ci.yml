
before_script:
  - export VERSION=$(grep -e '^version:' core/hasklepias.cabal | sed 's/version:[[:space:]]*//g')
  - export NAME=$(grep -e '^name:' core/hasklepias.cabal | sed 's/name:[[:space:]]*//g')

variables:
  PKG: hasklepias 

stages:
  - docker
  - build
  - release
  - deploy
  - docs
  - upload-docs

docker-build:
 stage : docker
 image: docker:19.03.8
 script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin  $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE/$PKG-build:$VERSION --tag $CI_REGISTRY_IMAGE/$PKG-build:latest .
    - docker push $CI_REGISTRY_IMAGE/$PKG-build:$VERSION
    - docker push $CI_REGISTRY_IMAGE/$PKG-build:latest

build-asclepias:
  stage: build
  needs: ["docker-build"]
  # NOTE: I couldn't get the $VERSION variable to work as in:
  #  image : registry.novisci.com/nsstat/asclepias/$PKG-build:$VERSION
  # hence, using latest tag, but this may not be ideal
  image: registry.novisci.com/nsstat/asclepias/$PKG-build:latest
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - dist-newstyle/
  script:
    - ghc --version
    - cabal --version
    - cabal build all

install-apps:
  stage: release
  needs: ["build-asclepias"]
  # NOTE: I couldn't get the $VERSION variable to work as in:
  #  image : registry.novisci.com/nsstat/asclepias/$PKG-build:$VERSION
  # hence, using latest tag, but this may not be ideal
  image: registry.novisci.com/nsstat/asclepias/$PKG-build:latest
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - dist-newstyle/
      - install/
      - cohort-collector*
  artifacts :
    name: "${CI_PROJECT_NAME}-${SAFE_REF_NAME}"
    paths:
      - "cohort-collector*.tar.gz"
    expire_in: 1 week
  script:
    - ghc --version
    - cabal --version
    - mkdir install -p
    - cabal install cohort-collector --install-method=copy --installdir=install --overwrite-policy=always
    - tar -czvf cohort-collector-$VERSION-linux-$(uname -m).tar.gz install/cohort-collector
  # release:
  #   name: 'Release $TAG'
  #   description: 'Created using the release-cli $EXTRA_DESCRIPTION'  # $EXTRA_DESCRIPTION and the $TAG
  #   tag_name: '$TAG'                                                 # variables must be defined elsewhere
  #   ref: '$CI_COMMIT_SHA'                                            # in the pipeline. For example, in the
  #   assets:
  #     links:
  #       - name: 'asset1'
  #         url: 'https://download.novisci.com/hasklepias/collector-$VERSION-linux-$CI_RUNNER_EXECUTABLE_ARCH.tar.gz'

install:
  stage: deploy
  needs: ["install-apps"]
  image: registry.novisci.com/nsstat/statocker/aws
  # cache:
  #   key: "$CI_JOB_NAME"
  #   paths:
  #     - dist-newstyle/
  #     - install/
  script:
    - aws s3 cp $CI_PROJECT_DIR/collector-$VERSION-linux.tar.gz s3://download.novisci.com/hasklepias/collector-$VERSION-linux.tar.gz --acl public-read


test:
  stage: build
  # NOTE: I couldn't get the $VERSION variable to work as in:
  #  image : registry.novisci.com/nsstat/asclepias/$PKG-build:$VERSION
  # hence, using latest tag, but this may not be ideal
  image: registry.novisci.com/nsstat/asclepias/$PKG-build:latest
  cache:
    # https://cabal.readthedocs.io/en/3.4/nix-local-build.html?highlight=dist-newstyle#caching
    key: "$CI_JOB_NAME"
    paths:
      - dist-newstyle/
  script:
    - ghc --version
    - cabal --version
    - cabal test all --test-show-details=always 

docs: 
  only: 
    - master
  image: registry.novisci.com/nsstat/asclepias/$PKG-build:latest
  needs: []
  stage: docs
  artifacts:
    paths:
      - dist-newstyle/
      - haddock-output.txt
    expire_in: 1 hour
  script:
    - ghc --version
    - cabal haddock --haddock-html-location='https://hackage.haskell.org/package/$pkg-$version/docs' --enable-documentation  --haddock-hyperlink-source --haddock-quickjump > haddock-output.txt

upload: 
  image: registry.novisci.com/nsstat/statocker/aws:latest
  needs: ["docs"]
  only: 
    - master
  stage: upload-docs
  script:
    - VAR=$(tail -1 haddock-output.txt)
    - aws s3 sync $(dirname $VAR) s3://docs.novisci.com/asclepias/$VERSION/ --delete --acl public-read
    - aws s3 sync $(dirname $VAR) s3://docs.novisci.com/asclepias/latest/ --delete --acl public-read
    - aws cloudfront create-invalidation --distribution-id E171A73GHZQS0B --paths /asclepias/latest/


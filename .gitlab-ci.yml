# .gitlab-ci.yml 
#
# * The MAINVERSION variable defined in the build_vars job is the version of the 
#   hasklepias-main package. This version number is used to tag the docker images
#   used in the build pipeline. This variable is passed to child pipelines via 
#   the job's dotenv artifacts. 
# * See https://docs.gitlab.com/ee/ci/pipelines/parent_child_pipelines.html for
#   more information.

variables:
  PKG: hasklepias
  GHC: "8.10.7"
  DOCKER: "20.10.11"

stages:
  - prep
  - build
  # - coverage

build_vars:
  stage: prep
  script:
    - echo "MAINVERSION=$(./scripts/get-version-from-cabal.sh hasklepias-main/hasklepias-main.cabal)" >> .env
  artifacts:
    reports:
      dotenv: .env

check-source:
  stage: prep
  image: registry.novisci.com/nsstat/nsbuild/haskell:$GHC
  script:
    - ./scripts/lint.sh
    - ./ci/ci-check-format.sh

trigger-main-build:
  stage: build
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    PARENT_CI_PIPELINE_SOURCE: $CI_PIPELINE_SOURCE
  trigger: 
    include: ci/ci-main-build.yml
    strategy: depend

trigger-static-build:
  stage: build
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  trigger: 
    include: ci/ci-static-build.yml
    strategy: depend

# # Report the test coverage as described in the following links. If the pipeline
# # succeeds, the coverage is shown in the merge request widget and in the jobs
# # table. The coverage is expected to written as an artifact to
# # `coverage-report.txt` in the form produced by Hpc.
# # * https://gitlab.novisci.com/help/ci/pipelines/settings#test-coverage-parsing
# # * https://docs.gitlab.com/13.12/ee/ci/yaml/README.html#coverage
# coverage-report:
#   stage: coverage
#   image: docker:$DOCKER
#   coverage: '/\d+\% top-level/'
#   script:
#     - cat coverage-report.txt

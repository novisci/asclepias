# Build and deploy statically linked executables including:
# - cohort-collector

stages:
  - pre-build
  - build 
  - checks
  - deploy

# Baseline set of rules for build-cohort-collector-static job and dependencies
# This should guarantee dependent jobs run only when the upstream job is run
# I (bbrown) have not specifically checked that the rules here are consistent
# with the rules in the dependent jobs
.rules-build-cohort-collector-static:
  rules:
    - if: '$PARENT_CI_PIPELINE_SOURCE == "merge_request_event" || $PARENT_CI_PIPELINE_SOURCE == "push"'
      changes:
        - "cohort-collector/*.cabal"
        - "cohort-collector/**/*.hs"
        - "hasklepias-main/**/*.hs"
        - "hasklepias-core/**/*.hs"
        - "ci/ci-cabal-build-exe-static.sh"
        - "ci/ci-static-build.yml"
        - "ci/ci-docker-build.sh"
        - "ci/dockerHasklepias"
    - if: '$CI_COMMIT_MESSAGE =~ /-static-build/'
    - if: '$CI_COMMIT_MESSAGE =~ /-docker/'

# Rule to run only if commit branch is default
# This goofy syntax is the result of no logical AND being available among if conditions.
# See the example:
# https://docs.gitlab.com/ee/ci/yaml/index.html#when
.rules-only-if-default:
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never

# The child pipeline needs at minimum one job to run - otherwise the sub-pipeline fails
# See https://gitlab.com/gitlab-org/gitlab/-/issues/218538
dummy:
  stage: build
  variables:
    GIT_STRATEGY: none
  script:
    # Print out some environmental variables for debugging information
    - 'echo "$CI_PIPELINE_SOURCE"'
    - 'echo "$CI_COMMIT_MESSAGE"'
    - 'echo "$PARENT_CI_PIPELINE_SOURCE"'
    - 'echo "$PARENT_PIPELINE_ID"'

# Build the docker image will all dependencies installed.
docker-build-musl:
 stage : pre-build
 image: docker:$DOCKER
 needs:
  - pipeline: $PARENT_PIPELINE_ID
    job: build_vars
    artifacts: true
 rules:
  - if: '$PARENT_CI_PIPELINE_SOURCE == "merge_request_event" || $PARENT_CI_PIPELINE_SOURCE == "push"'
    changes: ["**/*.cabal", "cabal.project", "ci/ci-docker-build.sh", "ci/dockerHasklepias"]
  - if: '$CI_COMMIT_MESSAGE =~ /-docker/'
 script:
    - ./ci/ci-docker-build.sh $MAINVERSION hasklepias-build-musl musl-haskell $GHC

# Builds the cohort collector app
build-cohort-collector-static:
  stage: build
  variables:
    INSTALL_DIR: install
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: build_vars
      artifacts: true
    - job: "docker-build-musl"
      optional: true
  rules:
    - !reference [.rules-build-cohort-collector-static, rules]
  image: registry.novisci.com/nsstat/asclepias/hasklepias-build-musl:${MAINVERSION}
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - "$INSTALL_DIR"
    expire_in: 1 day
  script:
     - ./ci/ci-cabal-build-exe-static.sh cohort-collector cohort-collector "$INSTALL_DIR"

# Checks run after building mainly to check consistency in documentation
check-docs:
  # The ci-docs-check script depends on the cohort-collector app being in the
  # install directory
  stage: checks
  needs: ["build-cohort-collector-static"]
  image: registry.novisci.com/nsstat/asclepias/hasklepias-build:latest
  script: 
    - ./ci/ci-docs-check.sh
  rules:
    - !reference [.rules-only-if-default, rules]
    - !reference [.rules-build-cohort-collector-static, rules]

# Deploy the executable bundle to an S3 location
deploy-aws-cohort-collector-static:
  stage: deploy
  needs: ["build-cohort-collector-static"]
  image: registry.novisci.com/nsstat/nsbuild/ubuntu:20.04
  script:
    - export BUNDLE=$(< install/cohort-collector.bundle)
    - | 
      aws s3 cp \
        install/${BUNDLE} \
        s3://$(< ci/downloads_path)${BUNDLE} \
        --acl public-read
  rules:
    - !reference [.rules-only-if-default, rules]
    - !reference [.rules-build-cohort-collector-static, rules]

# Deploy the app as a docker container
deploy-docker-cohort-collector-static:
  stage: deploy
  needs: ["build-cohort-collector-static"]
  image: docker:$DOCKER
  script:
    - export FILE=$(head -1 install/cohort-collector.name)
    - export VERSION=$(head -1 install/cohort-collector.version)
    - echo "$FILE"
    - echo $VERSION
    - ./ci/ci-docker-build-cohort-collector.sh $VERSION install/$FILE
  rules:
    - !reference [.rules-only-if-default, rules]
    - !reference [.rules-build-cohort-collector-static, rules]
